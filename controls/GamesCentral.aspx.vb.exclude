
Imports System
Imports System.Web.UI.WebControls
Imports System.Configuration
Imports System.Data
Imports System.Data.SqlClient
Imports DevCow.Web.UI
Imports System.Collections.Generic
Imports System.Linq
Imports System.Web
Imports System.Web.UI 
Imports System.Collections 
Imports System.Web.Security 
Imports System.Web.UI.WebControls.WebParts
Imports System.Web.UI.HtmlControls 
Partial Public Class Events_Calendar
    Inherits DevCowThemePage
    Protected IsAdmin As Boolean
    Private nextLocationID As Integer
    Private prevLocationID As Integer
    Const INVALIDID As Integer = -1


    Protected Property LocationID() As Integer
        Get
            Dim m_LocationID As Integer
            Dim id As Object = ViewState("LocationID")
            If id IsNot Nothing Then
                m_LocationID = CInt(id)
            Else
                id = Request.QueryString("LocationID")
                If id IsNot Nothing Then
                    m_LocationID = Convert.ToInt32(id)
                Else
                    m_LocationID = 1
                End If
                ViewState("LocationID") = m_LocationID
            End If
            Return m_LocationID
        End Get
        Set(value As Integer)
            ViewState("LocationID") = value
        End Set
    End Property
    Protected Sub Page_Load(sender As Object, e As EventArgs)

        Dim TabParam As New ArrayList(New Object() {New ArrayList(New Object() {True, "Golf Courses", "OnTabClick(0)", True}), New ArrayList(New Object() {False, "Game Pairing", "OnTabClick(1)", True}), New ArrayList(New Object() {False, "Score Cards", "OnTabClick(2)", True}), New ArrayList(New Object() {False, "Leader Board", "OnTabClick(3)", True})})

        Tabs1.TabParams = TabParam

        Dim ScoreParam As New ArrayList(New Object() {New ArrayList(New Object() {True, "Grp 1", "OnTabScoreClick(0)", True}), New ArrayList(New Object() {True, "Grp 2", "OnTabScoreClick(1)", True}), New ArrayList(New Object() {False, "Grp 3", "OnTabScoreClick(2)", True}), New ArrayList(New Object() {False, "Grp 4", "OnTabScoreClick(3)", True}), New ArrayList(New Object() {False, "Grp 5", "OnTabScoreClick(4)", True}), New ArrayList(New Object() {False, "Grp 6", "OnTabScoreClick(5)", True}), New ArrayList(New Object() {False, "Grp 7", "OnTabScoreClick(6)", True}), New ArrayList(New Object() {False, "Grp 8", "OnTabScoreClick(7)", True}), New ArrayList(New Object() {False, "Grp 9", "OnTabScoreClick(8)", True}), New ArrayList(New Object() {False, "Grp 10", "OnTabScoreClick(9)", True}), New ArrayList(New Object() {False, "Grp 11", "OnTabScoreClick(10)", True}), New ArrayList(New Object() {False, "Grp 12", "OnTabScoreClick(11)", True})})

        Tabs2.TabParams = ScoreParam

        If Not IsPostBack Then

            IsAdmin = User.IsInRole("Administrators")
            'panel1.Visible = IsAdmin;
            SqlDataSource2.SelectParameters("id").DefaultValue = Convert.ToString(LocationID)
            SqlDataSource4.SelectParameters("locationid").DefaultValue = Convert.ToString(LocationID)
            SqlGolfRating.SelectParameters("locationid").DefaultValue = Convert.ToString(LocationID)

            BindScorecardGrid()
            RadioSelected1.Checked = True
            BindPrimaryGrid()
            BindSecondaryGrid()

        End If


    End Sub
    Protected Sub pn1_SelectedPageChanged(sender As Object, e As EventArgs)

    End Sub
    Protected Sub Pn2_SelectedPageChanged(sender As Object, e As EventArgs)

    End Sub
    Protected Sub HolesScoreGrid_RowDataBound(sender As Object, e As GridViewRowEventArgs)

        If e.Row.RowType = DataControlRowType.DataRow Then

        End If
    End Sub
    Protected Sub PlayerScoreGrid_RowDataBound(sender As Object, e As GridViewRowEventArgs)

        If e.Row.RowType = DataControlRowType.DataRow Then

        End If
    End Sub

    Private Sub BindScorecardGrid()
        Dim constr As String = ConfigurationManager.ConnectionStrings("ClubSiteDB").ConnectionString
        SQLGridViewCourseDetails1.DataSource = CreateScoreCardDataTable()
        SQLGridViewCourseDetails1.DataBind()
    End Sub


    Private Function CreateScoreCardDataTable() As DataTable
        Dim dt As New DataTable()
        dt.Columns.Add("description")
        dt.Columns.Add("Hole1")
        dt.Columns.Add("Hole2")
        dt.Columns.Add("Hole3")
        dt.Columns.Add("Hole4")
        dt.Columns.Add("Hole5")
        dt.Columns.Add("Hole6")
        dt.Columns.Add("Hole7")
        dt.Columns.Add("Hole8")
        dt.Columns.Add("Hole9")
        dt.Columns.Add("TotalOUT")
        dt.Columns.Add("Hole10")
        dt.Columns.Add("Hole11")
        dt.Columns.Add("Hole12")
        dt.Columns.Add("Hole13")
        dt.Columns.Add("Hole14")
        dt.Columns.Add("Hole15")
        dt.Columns.Add("Hole16")
        dt.Columns.Add("Hole17")
        dt.Columns.Add("Hole18")
        dt.Columns.Add("TotalIN")
        dt.Columns.Add("GrandTotal")
        dt.Columns.Add("Handicap1")
        dt.Columns.Add("Handicap2")
        dt.Columns.Add("Net")
        dt.AcceptChanges()

        '1.Holes, 1-9, 'out', 10-18, 'in', 'grandtotal', 'hcp1', 'hcp2', 'net' 
        '2.Yards, 1-9, out, 10-18, in, grandtotal, Blank,Blank,,Blank   
        '3.HCP, 1-9, Blank, 10-18, Blank, Blank, Blank,Blank   
        '4.Player1, 1-9, out, 10-18,in, grandtotal, ,hcp1, hcp2, net       
        '5.Player2, 1-9, out, 10-18,in, grandtotal,hcp, hcp2, net  
        '6.Player3, 1-9, out, 10-18,in, grandtotal, hcp1, hcp2, net      
        '7.Player4, 1-9, out, 10-18,in, grandtotal, hcp1, hcp2, net 
        '8.Par, 1-9, out, 10-18, in, Blank, Blank,Blank   
        Dim partotalout As Integer = 0
        Dim partotalin As Integer = 0
        Dim yardagetotalout As Integer = 0
        Dim yardagetotalin As Integer = 0
        Dim grandpartotal As Integer = 0
        Dim grandyardagetotal As Integer = 0

        Dim i As Integer = 1

        Dim ssqlr As String = "SELECT sum([Par]) as total FROM [tb_Hole] where [LocationId] = 1 and [Ordinal] IN (1, 2, 3,4,5,6,7,8,9) union SELECT sum([Par]) as total FROM [tb_Hole] where [LocationId] = 1 and [Ordinal] IN (10, 11,12, 13,14,15,16,17,18) union SELECT sum([Yardage]) as total FROM [tb_Hole] where [LocationId] = 1 and [Ordinal] IN (1, 2, 3,4,5,6,7,8,9) union SELECT sum([Yardage]) as total FROM [tb_Hole] where [LocationId] = 1 and [Ordinal] IN (10, 11,12, 13,14,15,16,17,18)  "
        Dim drr As SqlDataReader
        drr = GetDataReader(ssqlr)

        While drr.Read

            Dim drow As DataRow = dt.NewRow()
            If i = 1 Then
                partotalout = drr.Item("total").ToString()
            End If
            If i = 2 Then
                partotalin = drr.Item("total").ToString()
            End If
            If i = 3 Then
                yardagetotalout = drr.Item("total").ToString()
            End If
            If i = 4 Then
                yardagetotalin = drr.Item("total").ToString()
            End If

            i = i + 1
        End While
        drr.Close()

        grandpartotal = partotalout + partotalin
        grandyardagetotal = yardagetotalout + yardagetotalin

        i = 1
        Dim blank As String = ""

        Dim ssql As String = "Select  * from (SELECT [Ordinal],[Par] FROM [tb_Hole] where [LocationId] = 1 ) as s PIVOT (max(Par) FOR [Ordinal] IN ([1], [2], [3],[4],[5],[6],[7],[8],[9],[10],[11], [12], [13],[14],[15],[16],[17],[18]))AS pvt union Select  * from (SELECT [Ordinal],[Yardage] FROM [tb_Hole] where [LocationId] = 1 ) as s PIVOT (max(Yardage) FOR [Ordinal] IN ([1], [2], [3],[4],[5],[6],[7],[8],[9],[10],[11], [12], [13],[14],[15],[16],[17],[18]))AS pvt union Select * from (SELECT [Ordinal],[Handicap] FROM [tb_Hole] where [LocationId] = 1 ) as s PIVOT (max(Handicap) FOR [Ordinal] IN ([1], [2], [3],[4],[5],[6],[7],[8],[9],[10],[11], [12], [13],[14],[15],[16],[17],[18]))AS pvt"
        Dim dr As SqlDataReader
        dr = GetDataReader(ssql)

        Dim drowx As DataRow = dt.NewRow()
        dt.Rows.Add(New Object() {"Hole", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ToTalOut", "10", "11", "12", "13", "14", "15", "16", "17", "18", "ToTalIn", "GrandToTal", "TournamentHCP", "GhinHCP", "NetScore"})

        While dr.Read

            Dim drow As DataRow = dt.NewRow()
            If i = 1 Then
                dt.Rows.Add(New Object() {"Par", dr.Item("1").ToString(), dr.Item("2").ToString(), dr.Item("3").ToString(), dr.Item("4").ToString(), dr.Item("5").ToString(), dr.Item("6").ToString(), dr.Item("7").ToString(), dr.Item("8").ToString(), dr.Item("9").ToString(), yardagetotalout, dr.Item("10").ToString(), dr.Item("11").ToString(), dr.Item("12").ToString(), dr.Item("13").ToString(), dr.Item("14").ToString(), dr.Item("15").ToString(), dr.Item("16").ToString(), dr.Item("17").ToString(), dr.Item("18").ToString(), yardagetotalin, grandyardagetotal, blank, blank, blank})
            End If
            If i = 2 Then
                dt.Rows.Add(New Object() {"HCP", dr.Item("1").ToString(), dr.Item("2").ToString(), dr.Item("3").ToString(), dr.Item("4").ToString(), dr.Item("5").ToString(), dr.Item("6").ToString(), dr.Item("7").ToString(), dr.Item("8").ToString(), dr.Item("9").ToString(), yardagetotalout, dr.Item("10").ToString(), dr.Item("11").ToString(), dr.Item("12").ToString(), dr.Item("13").ToString(), dr.Item("14").ToString(), dr.Item("15").ToString(), dr.Item("16").ToString(), dr.Item("17").ToString(), dr.Item("18").ToString(), blank, blank, blank, blank, blank})
            End If
            If i = 3 Then
                dt.Rows.Add(New Object() {"Yards", dr.Item("1").ToString(), dr.Item("2").ToString(), dr.Item("3").ToString(), dr.Item("4").ToString(), dr.Item("5").ToString(), dr.Item("6").ToString(), dr.Item("7").ToString(), dr.Item("8").ToString(), dr.Item("9").ToString(), yardagetotalout, dr.Item("10").ToString(), dr.Item("11").ToString(), dr.Item("12").ToString(), dr.Item("13").ToString(), dr.Item("14").ToString(), dr.Item("15").ToString(), dr.Item("16").ToString(), dr.Item("17").ToString(), dr.Item("18").ToString(), partotalin, grandpartotal, blank, blank, blank})
            End If

            i = i + 1
        End While
        dr.Close()

        'Dim ssql2 As String = "SELECT [Locations].[id] as id, [Locations].[title] as title, [memberinfo].[firstname] as firstname,[memberinfo].[lastname] as lastname,[tb_scorecard].[scorecardid] as scorecardid , [memberinfo].[Tournamenthandicap],[memberinfo].[ghinhandicap],[tb_Pairing].[SequenceId],   sum([tb_score].[strokes]) as totalscore,CASE WHEN [memberinfo].[Tournamenthandicap] > [memberinfo].[ghinhandicap] THEN sum([tb_score].[strokes]) - [memberinfo].[ghinhandicap] ELSE sum([tb_score].[strokes]) - [memberinfo].[Tournamenthandicap] END as Netscore  FROM [Locations], [memberinfo],  [tb_scorecard],  [tb_hole],[tb_score], [tb_Pairing] where [Locations].[id] = [tb_scorecard].[locationid] and [tb_scorecard].[memberid] =[memberinfo].[memberid] and [tb_score].[scorecardid]=[tb_scorecard].[scorecardid] and [memberinfo].[memberid]=[tb_scorecard].[memberid] and [tb_hole].[locationid]=[Locations].[id] and [Locations].[id] = 1 and [tb_Pairing].[locationid]=[Locations].[id] and [tb_Pairing].[memberid]=[memberinfo].[memberid]  and [tb_Pairing].[SequenceId] = 1 group by [Locations].[id], [Locations].[title], [memberinfo].[firstname], [memberinfo].[lastname],[tb_scorecard].[scorecardid],[memberinfo].[Tournamenthandicap] , [memberinfo].[Ghinhandicap],[tb_Pairing].[SequenceId]"
        'Dim dr2 As SqlDataReader
        'dr2 = GetDataReader(ssql2)
        'While dr2.Read
        '    '4.Player1, 1-9, out, 10-18 ,"ToTalIn", "GrandToTal", "TournamentHCP", "GhinHCP", "NetScore"       
        '    Dim drow As DataRow = dt.NewRow()
        '    dt.Rows.Add(New Object() {dr2.Item("firstname").ToString() & " " & dr2.Item("lastname").ToString(), blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, blank, dr2.Item("Totalscore").ToString(), dr2.Item("tournamenthandicap").ToString(), dr2.Item("Ghinhandicap").ToString(), dr2.Item("Netscore").ToString()})

        'End While
        'dr2.Close()
        'Dim strDetail As String = ""
        'For Each row As DataRow In dt.Rows
        '    strDetail = strDetail & "|" & row("description")
        '    strDetail = strDetail & "|" & strDetail & "|" & row("Hole1")
        '    strDetail = strDetail & "|" & row("Hole2")
        '    strDetail = strDetail & "|" & row("Hole3")
        '    strDetail = strDetail & "|" & row("Hole4")
        '    strDetail = strDetail & "|" & row("Hole5")
        '    strDetail = strDetail & "|" & row("Hole6")
        '    strDetail = strDetail & "|" & row("Hole7")
        '    strDetail = strDetail & "|" & row("Hole8")
        '    strDetail = strDetail & "|" & row("Hole9")
        '    strDetail = strDetail & "|" & row("TotalOUT")
        '    strDetail = strDetail & "|" & row("Hole10")
        '    strDetail = strDetail & "|" & row("Hole11")
        '    strDetail = strDetail & "|" & row("Hole12")
        '    strDetail = strDetail & "|" & row("Hole13")
        '    strDetail = strDetail & "|" & row("Hole14")
        '    strDetail = strDetail & "|" & row("Hole15")
        '    strDetail = strDetail & "|" & row("Hole16")
        '    strDetail = strDetail & "|" & row("Hole17")
        '    strDetail = strDetail & "|" & row("Hole18")
        '    strDetail = strDetail & "|" & row("TotalIN")
        '    strDetail = strDetail & "|" & row("GrandTotal")
        '    strDetail = strDetail & "|" & row("Handicap1")
        '    strDetail = strDetail & "|" & row("Handicap2")
        '    strDetail = strDetail & "|" & row("Net")

        '    'Response.Write(strDetail & "<br>")
        'Next row

        Return dt
    End Function

    Public Function GetDataReader(ByVal sSql As String) As SqlDataReader
        Dim cn As New SqlConnection(GetConnectionString())
        cn.Open()
        Dim cm As New SqlCommand(sSql, cn)
        Return cm.ExecuteReader(CommandBehavior.CloseConnection)
    End Function

    Public Function GetConnectionString() As String

        Dim strconnector As String = ""

        strconnector = ConfigurationManager.ConnectionStrings("ClubSiteDB").ConnectionString

        Return strconnector

    End Function
    Private Sub BindPrimaryGrid()
        Dim constr As String = ConfigurationManager.ConnectionStrings("ClubSiteDB").ConnectionString
        Dim query As String = "SELECT   GhinID, firstname, lastname,Tournamenthandicap,Ghinhandicap  FROM [memberinfo] order by firstname asc"
        Dim con As New SqlConnection(constr)
        Dim sda As New SqlDataAdapter(query, con)
        Dim dt As New DataTable()
        sda.Fill(dt)
        gvAll.DataSource = dt
        gvAll.DataBind()
    End Sub

    Protected Sub OnPaging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        GetData()
        gvAll.PageIndex = e.NewPageIndex
        BindPrimaryGrid()
        SetData()
    End Sub

    Private Sub GetData()
        Dim dt As DataTable
        If ViewState("SelectedRecords") IsNot Nothing Then
            dt = DirectCast(ViewState("SelectedRecords"), DataTable)
        Else
            dt = CreateDataTable()
        End If
        Dim chkAll As CheckBox = DirectCast(gvAll.HeaderRow _
                            .Cells(0).FindControl("chkAll"), CheckBox)
        For i As Integer = 0 To gvAll.Rows.Count - 1
            If chkAll.Checked Then
                dt = AddRow(gvAll.Rows(i), dt)
            Else
                Dim chk As CheckBox = DirectCast(gvAll.Rows(i) _
                                .Cells(0).FindControl("chk"), CheckBox)
                If chk.Checked Then
                    dt = AddRow(gvAll.Rows(i), dt)
                Else
                    dt = RemoveRow(gvAll.Rows(i), dt)
                End If
            End If
        Next
        ViewState("SelectedRecords") = dt
    End Sub

    Private Sub SetData()
        Dim chkAll As CheckBox = DirectCast(gvAll.HeaderRow.Cells(0).FindControl("chkAll"), CheckBox)
        chkAll.Checked = True
        If ViewState("SelectedRecords") IsNot Nothing Then
            Dim dt As DataTable = DirectCast(ViewState("SelectedRecords"), DataTable)
            For i As Integer = 0 To gvAll.Rows.Count - 1
                Dim chk As CheckBox = DirectCast(gvAll.Rows(i).Cells(0).FindControl("chk"), CheckBox)
                If chk IsNot Nothing Then
                    Dim dr As DataRow() = dt.[Select]("GhinID = '" & gvAll.Rows(i).Cells(1).Text & "'")
                    chk.Checked = dr.Length > 0
                    If Not chk.Checked Then
                        chkAll.Checked = False
                    End If
                End If
            Next
        End If
    End Sub

    Private Function CreateDataTable() As DataTable
        Dim dt As New DataTable()
        dt.Columns.Add("GhinID")
        dt.Columns.Add("firstname")
        dt.Columns.Add("lastname")
        dt.Columns.Add("Tournamenthandicap")
        dt.Columns.Add("Ghinhandicap")
        dt.AcceptChanges()
        Return dt
    End Function

    Private Function AddRow(ByVal gvRow As GridViewRow, ByVal dt As DataTable) As DataTable
        Dim dr As DataRow() = dt.Select("GhinID = '" _
                                    & gvRow.Cells(1).Text & "'")
        If dr.Length <= 0 Then
            dt.Rows.Add()
            dt.Rows(dt.Rows.Count - 1)("GhinID") = gvRow.Cells(1).Text
            dt.Rows(dt.Rows.Count - 1)("firstname") = gvRow.Cells(2).Text
            dt.Rows(dt.Rows.Count - 1)("lastname") = gvRow.Cells(3).Text
            dt.Rows(dt.Rows.Count - 1)("Tournamenthandicap") = gvRow.Cells(4).Text
            dt.Rows(dt.Rows.Count - 1)("Ghinhandicap") = gvRow.Cells(5).Text
            dt.AcceptChanges()
        End If
        Return dt

    End Function

    Private Function RemoveRow(ByVal gvRow As GridViewRow, ByVal dt As DataTable) As DataTable
        Dim dr As DataRow() = dt.Select("GhinID = '" _
                                    & gvRow.Cells(1).Text & "'")
        If dr.Length > 0 Then
            dt.Rows.Remove(dr(0))
            dt.AcceptChanges()
        End If
        Return dt
    End Function

    Protected Sub CheckBox_CheckChanged(ByVal sender As Object, ByVal e As EventArgs)
        GetData()
        SetData()
        BindSecondaryGrid()
    End Sub

    Private Sub BindSecondaryGrid()
        Dim dt As DataTable = DirectCast(ViewState("SelectedRecords"), DataTable)
        If RadioSelected1.Checked Then
            gvSelected1.DataSource = dt
            gvSelected1.DataBind()
        End If

        If RadioSelected2.Checked Then
            gvSelected2.DataSource = dt
            gvSelected2.DataBind()
        End If
        If RadioSelected3.Checked Then
            gvSelected3.DataSource = dt
            gvSelected3.DataBind()
        End If
        If RadioSelected4.Checked Then
            gvSelected4.DataSource = dt
            gvSelected4.DataBind()
        End If
        If RadioSelected5.Checked Then
            gvSelected5.DataSource = dt
            gvSelected5.DataBind()
        End If
        If RadioSelected6.Checked Then
            gvSelected6.DataSource = dt
            gvSelected6.DataBind()
        End If
        If RadioSelected7.Checked Then
            gvSelected7.DataSource = dt
            gvSelected7.DataBind()
        End If
        If RadioSelected8.Checked Then
            gvSelected8.DataSource = dt
            gvSelected8.DataBind()
        End If
        If RadioSelected9.Checked Then
            gvSelected9.DataSource = dt
            gvSelected9.DataBind()
        End If
        If RadioSelected10.Checked Then
            gvSelected10.DataSource = dt
            gvSelected10.DataBind()
        End If
        If RadioSelected11.Checked Then
            gvSelected11.DataSource = dt
            gvSelected11.DataBind()
        End If
        If RadioSelected12.Checked Then
            gvSelected12.DataSource = dt
            gvSelected12.DataBind()
        End If

    End Sub

    Protected Sub Clear_CheckChanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim dt As DataTable = Nothing
        If Clear1.Checked Then
            gvSelected1.DataSource = dt
            gvSelected1.DataBind()
        End If

        If Clear2.Checked Then
            gvSelected2.DataSource = dt
            gvSelected2.DataBind()
        End If
        If Clear3.Checked Then
            gvSelected3.DataSource = dt
            gvSelected3.DataBind()
        End If
        If Clear4.Checked Then
            gvSelected4.DataSource = dt
            gvSelected4.DataBind()
        End If
        If Clear5.Checked Then
            gvSelected5.DataSource = dt
            gvSelected5.DataBind()
        End If
        If Clear6.Checked Then
            gvSelected6.DataSource = dt
            gvSelected6.DataBind()
        End If
        If Clear7.Checked Then
            gvSelected7.DataSource = dt
            gvSelected7.DataBind()
        End If
        If Clear8.Checked Then
            gvSelected8.DataSource = dt
            gvSelected8.DataBind()
        End If
        If Clear9.Checked Then
            gvSelected9.DataSource = dt
            gvSelected9.DataBind()
        End If
        If Clear10.Checked Then
            gvSelected10.DataSource = dt
            gvSelected10.DataBind()
        End If
        If Clear11.Checked Then
            gvSelected11.DataSource = dt
            gvSelected11.DataBind()
        End If
        If Clear12.Checked Then
            gvSelected12.DataSource = dt
            gvSelected12.DataBind()
        End If

    End Sub


    Private Sub InsertPairing()

        Dim sSql4 As String = "DELETE FROM [tb_Pairing] WHERE locationid = 1"
        'oHelper.ExecuteSql(sSql4)

        InsertGridPairing(gvSelected1, 1)
        InsertGridPairing(gvSelected2, 2)
        InsertGridPairing(gvSelected3, 3)
        InsertGridPairing(gvSelected4, 4)
        InsertGridPairing(gvSelected5, 5)
        InsertGridPairing(gvSelected6, 6)
        InsertGridPairing(gvSelected7, 7)
        InsertGridPairing(gvSelected8, 8)
        InsertGridPairing(gvSelected9, 9)
        InsertGridPairing(gvSelected10, 10)
        InsertGridPairing(gvSelected11, 11)
        InsertGridPairing(gvSelected12, 12)
    End Sub
    Private Sub InsertGridPairing(ByRef gvSelected As GridView, seq As Integer)

        Dim gridrow As GridViewRow

        Dim sSql As String = ""

        For Each gridrow In gvSelected.Rows
            Dim GhinID As TextBox = gridrow.FindControl("GhinID")
            Dim Locationid As TextBox = gridrow.FindControl("Locationid")
            Dim memberid As TextBox = gridrow.FindControl("memberid")

            If GhinID.Text IsNot Nothing Then
                If Locationid.Text <> "" Then
                    sSql = "INSERT INTO tb_Pairing (GhinID, Locationid, memberid, sequenceid)"
                    sSql += " VALUES ("
                    sSql += "" & GhinID.Text
                    sSql += "," & Locationid.Text
                    sSql += "," & memberid.Text
                    sSql += "," & seq
                    sSql += ")"
                    'oHelper.ExecuteSql(sSql)
                End If
            End If
        Next

    End Sub
    Protected Sub SqlDataSource1_Selected(sender As Object, e As SqlDataSourceStatusEventArgs)
        'Dim pages As Integer
        'pages = System.Convert.ToInt32(e.Command.Parameters("@pageCount").Value)

    End Sub

    Protected Sub nextButton_Click(sender As Object, e As EventArgs)
        InitValsFromSql(LocationID)
        If nextLocationID <> INVALIDID Then
            prevLocationID = LocationID
            LocationID = nextLocationID
            SqlDataSource2.SelectParameters("id").DefaultValue = Convert.ToString(nextLocationID)
        End If
        ToggleLinks()
    End Sub
    Protected Sub prevButton_Click(sender As Object, e As System.EventArgs)
        InitValsFromSql(LocationID)
        If prevLocationID <> INVALIDID Then
            nextLocationID = LocationID
            LocationID = prevLocationID
            SqlDataSource2.SelectParameters("id").DefaultValue = Convert.ToString(prevLocationID)
        End If
        ToggleLinks()
    End Sub
    Protected Sub ToggleLinks()
        'LinkButton1.Enabled = (nextLocationID <> INVALIDID)
        'LinkButton3.Enabled = (nextLocationID <> INVALIDID)
        'LinkButton2.Enabled = (prevLocationID <> INVALIDID)
        'LinkButton4.Enabled = (prevLocationID <> INVALIDID)
    End Sub
    Protected Sub InitValsFromSql(LocationID As Integer)
        Try
            Dim connection As New SqlConnection(ConfigurationManager.ConnectionStrings("ClubSiteDB").ConnectionString)
            Dim command As New SqlCommand("dbo.NextPrevLocation", connection)

            Dim param0 As New SqlParameter("@id", LocationID)
            Dim param1 As New SqlParameter("@previd", INVALIDID)
            Dim param2 As New SqlParameter("@nextid", INVALIDID)

            param1.Direction = ParameterDirection.InputOutput
            param2.Direction = ParameterDirection.InputOutput

            command.Parameters.Add(param0)
            command.Parameters.Add(param1)
            command.Parameters.Add(param2)

            command.CommandType = CommandType.StoredProcedure
            connection.Open()
            command.ExecuteNonQuery()

            If param1.Value IsNot Nothing Then
                prevLocationID = Convert.ToInt32(param1.Value)
            Else
                prevLocationID = INVALIDID
            End If
            If param2.Value IsNot Nothing Then
                nextLocationID = Convert.ToInt32(param2.Value)
            Else
                nextLocationID = INVALIDID
            End If
            connection.Close()
        Catch
            prevLocationID = INVALIDID
            nextLocationID = INVALIDID
        End Try
    End Sub


End Class

